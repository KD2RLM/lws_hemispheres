#!/usr/bin/env python
"""
The prupose of this script is to try to understand the differences between the
processing that was done in 2016 with the processing we are able to do in 2023
after the code was ported from DaViTPy/Python 2 to pyDARN/Python 3.

This script will load in the CSV file generated by compare_dbs.py that lists
the reject codes from the 2016 and 2023 processing. It will:
    1. Find all of the periods that had a reject code 3 in 2016
       but were not rejected in 2023. 
    2. Copy the RTI PNGs of all of those periods into a single output
       directory.

Nathaniel Frissell
August 21, 2023
"""

import os
import shutil
import tqdm
import datetime

import numpy as np
import pandas as pd

import mstid

# Load in CSV and convert to dataframe.
csv_in  = os.path.join('data','db_compare','mstid_2016-fitexfilter','mstid_2016-fitexfilter.csv')
df_0    = pd.read_csv(csv_in,comment='#',index_col=0,parse_dates=[1,2])


### Select only rows where the reject code changes from 3 to 0.
# mstid_2016:reject_code == 3
col_0   = 'mstid_2016:reject_code'
code_0  = 3

# fitexfilter:reject_code == 0
col_1   = 'fitexfilter:reject_code'
code_1  = 0

tf      = np.logical_and(df_0[col_0]==code_0,df_0[col_1]==code_1)
df      = df_0[tf].copy()


### Keep only columns of interest.
df_keys = []
df_keys.append('sDatetime')
df_keys.append('fDatetime')
df_keys.append('radar')
df_keys.append(col_0)
df_keys.append(col_1)
df      = df[df_keys].copy()


### Copy RTI PNGs over to output dir.
data_path   = os.path.join(os.sep,'data','mstid_data','mstid_data_HALF_SLANT','mstid_index')
output_dir  = os.path.join('output','db_compare','reject_code_{!s}_{!s}'.format(code_0,code_1))
mstid.general_lib.prepare_output_dirs({0:output_dir},clear_output_dirs=True)

cnt = 0
for rinx,row in tqdm.tqdm(df.iterrows(),total=len(df),dynamic_ncols=True):
    radar       = row.get('radar')
    sTime       = row.get('sDatetime')
    eTime       = row.get('fDatetime')
    event_dir   = mstid.more_music.get_output_path(radar,sTime,eTime,data_path)

    file_0      = os.path.join(event_dir,'000_originalFit_RTI.png')
    fname       = '{!s}_{!s}_RTI.png'.format(radar,os.path.basename(event_dir))
    file_1      = os.path.join(output_dir,fname)
    if os.path.exists(file_0):
        tqdm.tqdm.write(file_0)
        tqdm.tqdm.write('   --> {!s}'.format(file_1))
        shutil.copy(file_0,file_1)
    else:
        tqdm.tqdm.write('FILE MISSING: {!s}'.format(file_0))

#    cnt += 1
#    if cnt == 10:
#        break

import ipdb; ipdb.set_trace()
